import MySQLdb

class mySQLHandler:
	def __init__(self, host, user, password, database):
		self.host = host
		self.user = user
		self.password = password
		self.database = database
		self.db = MySQLdb.connect(self.host, self.user, self.password, self.database)
		self.cursor = self.db.cursor()
	def now():
		pass
	def db_insert(self, table, data):
		col = " (";
		val = " (";
		flag = False
		for key in data.keys():
			if flag:
				col += ","
				val += ","
			else:
				flag = True
			col += key
			if type(data[key]) is str or type(data[key]) is unicode:
				val += "'"+data[key].replace('\'', '\'\'')+"'"
			elif data[key] == self.now:
				val += "now()"
			else:
				val += str(data[key])
				
		col += ") ";
		val += ") ";
		sql = "INSERT INTO "+table+col+"VALUES"+val
		print sql
		try:
			self.cursor.execute(sql)
			self.db.commit()
			return True
		except:
			self.db.rollback()
			return False
	def db_update(self, table, data,  _where = "true"):
		str_data = " ";
		flag = False
		for key in data.keys():
			if flag:
				str_data += ","
			else:
				flag = True
			str_data += key+" = "
			if type(data[key]) is str or type(data[key]) is unicode:
				str_data += "'"+data[key].replace('\'', '\'\'')+"'"
			elif data[key] == None:
				str_data += "NULL"
			else:
				str_data += str(data[key])
				
		sql = "UPDATE "+table+" SET "+str_data+" WHERE "+_where
		try:
			self.cursor.execute(sql)
			self.db.commit()
			return True
		except:
			self.db.rollback()
			return False
	def db_delete(self, table,  _where = "false"):
		sql = "DELETE FROM "+table+" WHERE "+_where
		try:
			self.cursor.execute(sql)
			self.db.commit()
			return True
		except:
			self.db.rollback()
			return False
	def db_select(self, table, cols=[] ,  _where = "true"):
		column=''
		if len(cols) == 0:
			column = '*'
		flag = False
		for col in cols:
			if flag:
				column += ","
			else:
				flag = True
			column += col
		sql = "SELECT "+column+" FROM "+table+" WHERE "+_where
		try:
			self.cursor.execute(sql)
			results = self.cursor.fetchall()
			return results
		except:
			return False
	def string_validation(self, s):
		pass
	def close(self):
		self.db.close()

if __name__ == "__main__":
	mysql = mySQLHandler("192.168.43.6","janoko","admin","fp_cloud")
	print "connected"
	nrp = 5115100101
	for i in range(200):
		tmp = nrp + i
		data =  mysql.db_insert("mahasiswa", {"nrp": str(tmp), "nama":"A", "password" :"B"})
